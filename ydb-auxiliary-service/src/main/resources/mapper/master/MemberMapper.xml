<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ydb.auxiliary.service.ydbauxiliaryservice.dao.master.MemberMapper">
    <resultMap id="BaseResultMap" type="ydb.auxiliary.service.ydbauxiliaryservice.model.Member">
        <result column="ID" jdbcType="BIGINT" property="id"/>
        <result column="OPENID" jdbcType="VARCHAR" property="openid"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="HEAD_IMG" jdbcType="VARCHAR" property="headImg"/>
        <result column="M_TYPE" jdbcType="INTEGER" property="mType"/>
        <result column="M_GROUP" jdbcType="INTEGER" property="mGroup"/>
        <result column="ISRECEIVE" jdbcType="INTEGER" property="isreceive"/>
        <result column="ISWITHDRAW" jdbcType="INTEGER" property="iswithdraw"/>
        <result column="ISBLOCK" jdbcType="INTEGER" property="isblock"/>
        <result column="REGISTTIME" jdbcType="TIMESTAMP" property="registtime"/>
        <result column="SEX" jdbcType="INTEGER" property="sex"/>
        <result column="OPENID_MP" jdbcType="VARCHAR" property="openidMp"/>
        <result column="UNIONID" jdbcType="VARCHAR" property="unionid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, OPENID, nick_name, HEAD_IMG, M_TYPE, M_GROUP, ISRECEIVE, ISWITHDRAW, ISBLOCK, 
    REGISTTIME, SEX, OPENID_MP, UNIONID
  </sql>
    <select id="selectByExample" parameterType="ydb.auxiliary.service.ydbauxiliaryservice.model.MemberExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="ydb.auxiliary.service.ydbauxiliaryservice.model.MemberExample">
        delete from member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="ydb.auxiliary.service.ydbauxiliaryservice.model.Member">
    insert into member (ID, OPENID, nick_name, 
      HEAD_IMG, M_TYPE, M_GROUP, 
      ISRECEIVE, ISWITHDRAW, ISBLOCK, 
      REGISTTIME, SEX, OPENID_MP, 
      UNIONID)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{headImg,jdbcType=VARCHAR}, #{mType,jdbcType=INTEGER}, #{mGroup,jdbcType=INTEGER}, 
      #{isreceive,jdbcType=INTEGER}, #{iswithdraw,jdbcType=INTEGER}, #{isblock,jdbcType=INTEGER}, 
      #{registtime,jdbcType=TIMESTAMP}, #{sex,jdbcType=INTEGER}, #{openidMp,jdbcType=VARCHAR}, 
      #{unionid,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="ydb.auxiliary.service.ydbauxiliaryservice.model.Member">
        insert into member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="openid != null">
                OPENID,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="headImg != null">
                HEAD_IMG,
            </if>
            <if test="mType != null">
                M_TYPE,
            </if>
            <if test="mGroup != null">
                M_GROUP,
            </if>
            <if test="isreceive != null">
                ISRECEIVE,
            </if>
            <if test="iswithdraw != null">
                ISWITHDRAW,
            </if>
            <if test="isblock != null">
                ISBLOCK,
            </if>
            <if test="registtime != null">
                REGISTTIME,
            </if>
            <if test="sex != null">
                SEX,
            </if>
            <if test="openidMp != null">
                OPENID_MP,
            </if>
            <if test="unionid != null">
                UNIONID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="mType != null">
                #{mType,jdbcType=INTEGER},
            </if>
            <if test="mGroup != null">
                #{mGroup,jdbcType=INTEGER},
            </if>
            <if test="isreceive != null">
                #{isreceive,jdbcType=INTEGER},
            </if>
            <if test="iswithdraw != null">
                #{iswithdraw,jdbcType=INTEGER},
            </if>
            <if test="isblock != null">
                #{isblock,jdbcType=INTEGER},
            </if>
            <if test="registtime != null">
                #{registtime,jdbcType=TIMESTAMP},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="openidMp != null">
                #{openidMp,jdbcType=VARCHAR},
            </if>
            <if test="unionid != null">
                #{unionid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="ydb.auxiliary.service.ydbauxiliaryservice.model.MemberExample"
            resultType="java.lang.Long">
        select count(*) from member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update member
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.openid != null">
                OPENID = #{record.openid,jdbcType=VARCHAR},
            </if>
            <if test="record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.headImg != null">
                HEAD_IMG = #{record.headImg,jdbcType=VARCHAR},
            </if>
            <if test="record.mType != null">
                M_TYPE = #{record.mType,jdbcType=INTEGER},
            </if>
            <if test="record.mGroup != null">
                M_GROUP = #{record.mGroup,jdbcType=INTEGER},
            </if>
            <if test="record.isreceive != null">
                ISRECEIVE = #{record.isreceive,jdbcType=INTEGER},
            </if>
            <if test="record.iswithdraw != null">
                ISWITHDRAW = #{record.iswithdraw,jdbcType=INTEGER},
            </if>
            <if test="record.isblock != null">
                ISBLOCK = #{record.isblock,jdbcType=INTEGER},
            </if>
            <if test="record.registtime != null">
                REGISTTIME = #{record.registtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.sex != null">
                SEX = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.openidMp != null">
                OPENID_MP = #{record.openidMp,jdbcType=VARCHAR},
            </if>
            <if test="record.unionid != null">
                UNIONID = #{record.unionid,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update member
        set ID = #{record.id,jdbcType=BIGINT},
        OPENID = #{record.openid,jdbcType=VARCHAR},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        HEAD_IMG = #{record.headImg,jdbcType=VARCHAR},
        M_TYPE = #{record.mType,jdbcType=INTEGER},
        M_GROUP = #{record.mGroup,jdbcType=INTEGER},
        ISRECEIVE = #{record.isreceive,jdbcType=INTEGER},
        ISWITHDRAW = #{record.iswithdraw,jdbcType=INTEGER},
        ISBLOCK = #{record.isblock,jdbcType=INTEGER},
        REGISTTIME = #{record.registtime,jdbcType=TIMESTAMP},
        SEX = #{record.sex,jdbcType=INTEGER},
        OPENID_MP = #{record.openidMp,jdbcType=VARCHAR},
        UNIONID = #{record.unionid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>




</mapper>